language: cpp
dist: trusty
sudo: false

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - lcov
      env:
        - MATRIX_EVAL="CXX=g++-8 && BUILD_TYPE=Coverage"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-6.0
            - libstdc++-8-dev
      env:
        - MATRIX_EVAL="CXX=clang++-6.0 && BUILD_TYPE=Debug"

before_script:
  - eval "${MATRIX_EVAL}"
  - $CXX --version
  - mkdir -p build && cd build

script:
  # Run cmake, then compile and run tests with make
  - cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DBUILD_TEST=ON ..;
  - make -j$(nproc)
  - ctest -V

after_success:
  - if [ "${CXX}" == "g++-8" ]; then
      git clone https://github.com/linux-test-project/lcov;
      pushd lcov;
      git checkout e675080;
      popd;
      ./lcov/bin/lcov --gcov-tool `which gcov-8` -c -d src/CMakeFiles/cppglob.dir -b ../src -o coverage.info;
      ./lcov/bin/lcov --remove coverage.info '/usr/*' -o coverage.info;
      ./lcov/bin/lcov --list coverage.info;
      bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports";
    fi


after_failure:
  # Dumps any logs so you can read the stderr
  - if [[ -e 'Testing/Temporary/LastTest.log' ]]; then cat 'Testing/Temporary/LastTest.log'; fi
  - if [[ -e 'CMakeFiles/CMakeError.log' ]]; then cat 'CMakeFiles/CMakeError.log'; fi
